{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasuri/Desktop/School/CS348ProjShreyaS/client/src/Components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reports() {\n  _s();\n  const [taskType, setTaskType] = useState(\"\"); // To store the task type\n  const [startDate, setStartDate] = useState(\"\"); // To store the start date\n  const [endDate, setEndDate] = useState(\"\"); // To store the end date\n  const [reportData, setReportData] = useState([]); // To store the report results\n  const [error, setError] = useState(\"\"); // To store any error messages\n  const [taskTypes, setTaskTypes] = useState([]); // To store task types from the backend\n\n  // Fetch task types from the backend when the component mounts\n  useEffect(() => {\n    fetch(\"/api/task_types\") // Fetch task types dynamically\n    .then(response => response.json()).then(data => setTaskTypes(data));\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate date inputs\n    if (!startDate || !endDate || new Date(startDate) > new Date(endDate)) {\n      setError(\"Please enter a valid date range.\");\n      return;\n    }\n\n    // Build the query parameters\n    const query = new URLSearchParams();\n    if (taskType) query.append(\"task_type\", taskType);\n    if (startDate) query.append(\"start_date\", startDate);\n    if (endDate) query.append(\"end_date\", endDate);\n\n    // Fetch report data\n    fetch(`/api/report?${query.toString()}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch report data\");\n      }\n      return response.json();\n    }).then(data => {\n      setReportData(data);\n      setError(\"\"); // Clear previous errors\n    }).catch(err => {\n      setError(err.message);\n      setReportData([]); // Clear previous report data if there's an error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: taskType,\n          onChange: e => setTaskType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Task Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), taskTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }, this), reportData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Report Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: reportData.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), \" (\", task.task_type, \") - Due: \", task.due_date, \", Priority: \", task.priority_level]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Reports, \"vMA0zOTy2YeAhXokdPpDZqSwHss=\");\n_c = Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Reports","_s","taskType","setTaskType","startDate","setStartDate","endDate","setEndDate","reportData","setReportData","error","setError","taskTypes","setTaskTypes","fetch","then","response","json","data","handleSubmit","e","preventDefault","Date","query","URLSearchParams","append","toString","ok","Error","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","map","type","style","color","length","task","index","task_name","task_type","due_date","priority_level","_c","$RefreshReg$"],"sources":["/Users/shreyasuri/Desktop/School/CS348ProjShreyaS/client/src/Components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Reports() {\n    const [taskType, setTaskType] = useState(\"\"); // To store the task type\n    const [startDate, setStartDate] = useState(\"\"); // To store the start date\n    const [endDate, setEndDate] = useState(\"\"); // To store the end date\n    const [reportData, setReportData] = useState([]); // To store the report results\n    const [error, setError] = useState(\"\"); // To store any error messages\n    const [taskTypes, setTaskTypes] = useState([]); // To store task types from the backend\n\n    // Fetch task types from the backend when the component mounts\n    useEffect(() => {\n        fetch(\"/api/task_types\") // Fetch task types dynamically\n            .then((response) => response.json())\n            .then((data) => setTaskTypes(data));\n    }, []);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    \n        // Validate date inputs\n        if (!startDate || !endDate || new Date(startDate) > new Date(endDate)) {\n            setError(\"Please enter a valid date range.\");\n            return;\n        }\n    \n        // Build the query parameters\n        const query = new URLSearchParams();\n        if (taskType) query.append(\"task_type\", taskType);\n        if (startDate) query.append(\"start_date\", startDate);\n        if (endDate) query.append(\"end_date\", endDate);\n    \n        // Fetch report data\n        fetch(`/api/report?${query.toString()}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch report data\");\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setReportData(data);\n                setError(\"\"); // Clear previous errors\n            })\n            .catch((err) => {\n                setError(err.message);\n                setReportData([]); // Clear previous report data if there's an error\n            });\n    };\n    \n\n    return (\n        <div>\n            <h1>Generate Report</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Task Type: </label>\n                    <select\n                        value={taskType}\n                        onChange={(e) => setTaskType(e.target.value)}\n                    >\n                        <option value=\"\">Select Task Type</option>\n                        {taskTypes.map((type) => (\n                            <option key={type} value={type}>{type}</option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label>Start Date: </label>\n                    <input\n                        type=\"date\"\n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>End Date: </label>\n                    <input\n                        type=\"date\"\n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Generate Report</button>\n            </form>\n\n            {/* Display error message if any */}\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n            {/* Display report data */}\n            {reportData.length > 0 && (\n                <div>\n                    <h2>Report Results</h2>\n                    <ul>\n                        {reportData.map((task, index) => (\n                            <li key={index}>\n                                <strong>{task.task_name}</strong> ({task.task_type}) - Due: {task.due_date}, Priority: {task.priority_level}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}