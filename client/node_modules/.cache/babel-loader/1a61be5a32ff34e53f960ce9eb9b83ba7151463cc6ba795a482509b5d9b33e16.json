{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasuri/Desktop/School/CS348ProjShreyaS/client/src/Components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reports() {\n  _s();\n  const [taskType, setTaskType] = useState(\"\"); // To store the task type\n  const [startDate, setStartDate] = useState(\"\"); // To store the start date\n  const [endDate, setEndDate] = useState(\"\"); // To store the end date\n  const [reportData, setReportData] = useState([]); // To store the report results\n  const [error, setError] = useState(\"\"); // To store any error messages\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate date inputs\n    if (!startDate || !endDate || new Date(startDate) > new Date(endDate)) {\n      setError(\"Please enter a valid date range.\");\n      return;\n    }\n\n    // Build the query parameters\n    const query = new URLSearchParams();\n    if (taskType) query.append(\"task_type\", taskType);\n    if (startDate) query.append(\"start_date\", startDate);\n    if (endDate) query.append(\"end_date\", endDate);\n\n    // Fetch report data\n    fetch(`/api/report?${query.toString()}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch report data\");\n      }\n      return response.json();\n    }).then(data => {\n      setReportData(data);\n      setError(\"\"); // Clear previous errors\n    }).catch(err => {\n      setError(err.message);\n      setReportData([]); // Clear previous report data if there's an error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskType,\n          onChange: e => setTaskType(e.target.value),\n          placeholder: \"Enter task type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), reportData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Report Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: reportData.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), \" (\", task.task_type, \") - Due: \", task.due_date, \", Priority: \", task.priority_level]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Reports, \"H15WRxCuw9ATqdPLQ+8CXNUdPq8=\");\n_c = Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Reports","_s","taskType","setTaskType","startDate","setStartDate","endDate","setEndDate","reportData","setReportData","error","setError","handleSubmit","e","preventDefault","Date","query","URLSearchParams","append","fetch","toString","then","response","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","style","color","length","map","task","index","task_name","task_type","due_date","priority_level","_c","$RefreshReg$"],"sources":["/Users/shreyasuri/Desktop/School/CS348ProjShreyaS/client/src/Components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Reports() {\n    const [taskType, setTaskType] = useState(\"\"); // To store the task type\n    const [startDate, setStartDate] = useState(\"\"); // To store the start date\n    const [endDate, setEndDate] = useState(\"\"); // To store the end date\n    const [reportData, setReportData] = useState([]); // To store the report results\n    const [error, setError] = useState(\"\"); // To store any error messages\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    \n        // Validate date inputs\n        if (!startDate || !endDate || new Date(startDate) > new Date(endDate)) {\n            setError(\"Please enter a valid date range.\");\n            return;\n        }\n    \n        // Build the query parameters\n        const query = new URLSearchParams();\n        if (taskType) query.append(\"task_type\", taskType);\n        if (startDate) query.append(\"start_date\", startDate);\n        if (endDate) query.append(\"end_date\", endDate);\n    \n        // Fetch report data\n        fetch(`/api/report?${query.toString()}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch report data\");\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setReportData(data);\n                setError(\"\"); // Clear previous errors\n            })\n            .catch((err) => {\n                setError(err.message);\n                setReportData([]); // Clear previous report data if there's an error\n            });\n    };\n    \n\n    return (\n        <div>\n            <h1>Generate Report</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Task Type: </label>\n                    <input\n                        type=\"text\"\n                        value={taskType}\n                        onChange={(e) => setTaskType(e.target.value)}\n                        placeholder=\"Enter task type\"\n                    />\n                </div>\n                <div>\n                    <label>Start Date: </label>\n                    <input\n                        type=\"date\"\n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>End Date: </label>\n                    <input\n                        type=\"date\"\n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Generate Report</button>\n            </form>\n\n            {/* Display error message if any */}\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n            {/* Display report data */}\n            {reportData.length > 0 && (\n                <div>\n                    <h2>Report Results</h2>\n                    <ul>\n                        {reportData.map((task, index) => (\n                            <li key={index}>\n                                <strong>{task.task_name}</strong> ({task.task_type}) - Due: {task.due_date}, Priority: {task.priority_level}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACV,SAAS,IAAI,CAACE,OAAO,IAAI,IAAIS,IAAI,CAACX,SAAS,CAAC,GAAG,IAAIW,IAAI,CAACT,OAAO,CAAC,EAAE;MACnEK,QAAQ,CAAC,kCAAkC,CAAC;MAC5C;IACJ;;IAEA;IACA,MAAMK,KAAK,GAAG,IAAIC,eAAe,CAAC,CAAC;IACnC,IAAIf,QAAQ,EAAEc,KAAK,CAACE,MAAM,CAAC,WAAW,EAAEhB,QAAQ,CAAC;IACjD,IAAIE,SAAS,EAAEY,KAAK,CAACE,MAAM,CAAC,YAAY,EAAEd,SAAS,CAAC;IACpD,IAAIE,OAAO,EAAEU,KAAK,CAACE,MAAM,CAAC,UAAU,EAAEZ,OAAO,CAAC;;IAE9C;IACAa,KAAK,CAAC,eAAeH,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACZjB,aAAa,CAACiB,IAAI,CAAC;MACnBf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CACDgB,KAAK,CAAEC,GAAG,IAAK;MACZjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,CAAC;MACrBpB,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;EACV,CAAC;EAGD,oBACIV,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAA+B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnC,OAAA;MAAMoC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBACzB/B,OAAA;QAAA+B,QAAA,gBACI/B,OAAA;UAAA+B,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BnC,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEnC,QAAS;UAChBoC,QAAQ,EAAGzB,CAAC,IAAKV,WAAW,CAACU,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UAC7CG,WAAW,EAAC;QAAiB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNnC,OAAA;QAAA+B,QAAA,gBACI/B,OAAA;UAAA+B,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BnC,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjC,SAAU;UACjBkC,QAAQ,EAAGzB,CAAC,IAAKR,YAAY,CAACQ,CAAC,CAAC0B,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNnC,OAAA;QAAA+B,QAAA,gBACI/B,OAAA;UAAA+B,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBnC,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE/B,OAAQ;UACfgC,QAAQ,EAAGzB,CAAC,IAAKN,UAAU,CAACM,CAAC,CAAC0B,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAGNxB,KAAK,iBAAIX,OAAA;MAAG0C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGhD1B,UAAU,CAACmC,MAAM,GAAG,CAAC,iBAClB5C,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAA+B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBnC,OAAA;QAAA+B,QAAA,EACKtB,UAAU,CAACoC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxB/C,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAA+B,QAAA,EAASe,IAAI,CAACE;UAAS;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACW,IAAI,CAACG,SAAS,EAAC,WAAS,EAACH,IAAI,CAACI,QAAQ,EAAC,cAAY,EAACJ,IAAI,CAACK,cAAc;QAAA,GADtGJ,KAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjC,EAAA,CA3FuBD,OAAO;AAAAmD,EAAA,GAAPnD,OAAO;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}